#YokanParty https://atcoder.jp/contests/typical90/tasks/typical90_a
'''
[問題]
左右の長さが L [cm] のようかんがあります。 N 個の切れ目が付けられており、左から i 番目の切れ目は左から A_i[cm] の位置にあります。
あなたは N 個の切れ目のうち K 個を選び、ようかんを K+1 個のピースに分割したいです。そこで、以下の値を スコア とします。
K+1 個のピースのうち、最も短いものの長さ（cm 単位）←スコア
スコアが最大となるように分割する場合に得られるスコアを求めてください。
'''

'''
[思考]
要は最小値を最大化しようっていう話。
全て均等に切り分けたら、ピースの長さは L/K+1 となり最大。これが上限値。最小値は0。
0から L/K+1 まで全て計算しても良いが、遅すぎる。
↓
二分探索しよう！！！！！！
探索する条件は
「最小の長さがx以上になるような切り分け方が存在するか」
でおこなう。
xより大きい長さで切り分けられないなら、解はより小さい値であり。
xより大きい長さで切り分けられるなら、解はより大きい値であるから。
'''

N, L = map(int, input().split())     #切れ目の数N、　ようかんの長さL
K = int(input())                     #選ぶ切れ目の数
A = list(map(int, input().split()))  #左端からの切れ目の位置
A.append(L)                          #ようかんの右端も追加。これで要素数はN+1

min = 0      #解のとりうる最小値
max = L + 1  #解のとりうる最大値

while max - min > 1: #maxとminの差が1以下になるまで繰り返し
    middle = (max + min)//2 #maxとminの中間値(整数)
    
    c = 0    #切った回数
    prev = 0 #最後に切った箇所
    for i in range(N+1):
        if A[i] - prev >= middle:
            prev = A[i]
            c+=1
       
    if c >= K+1:     #K+1個以上に分割できたらもう少し大きい範囲で。
        min = middle
    else:
        max = middle #K+1未満に分割したなら、もう少し小さい範囲を見る。    

print(min)